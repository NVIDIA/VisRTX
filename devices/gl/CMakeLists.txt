# Copyright (c) 2019-2022 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: BSD-3-Clause
# This file was generated by generate_device_frontend.py from CMakeLists.txt

set(CMAKE_CXX_STANDARD 11)

project(anari_library_visgl LANGUAGES CXX)

find_package(Threads REQUIRED)
find_package(OpenGL REQUIRED COMPONENTS OpenGL OPTIONAL_COMPONENTS EGL GLX)
find_package(X11)

if(CMAKE_VERSION VERSION_GREATER_EQUAL "3.12")
  find_package(Python3 REQUIRED COMPONENTS Interpreter)

  add_custom_target(generate_VisGL_queries
    COMMAND ${Python3_EXECUTABLE} ${ANARI_CODE_GEN_ROOT}/generate_queries.py
      --json ${ANARI_CODE_GEN_ROOT}
      --json ${CMAKE_CURRENT_SOURCE_DIR}
      --prefix VisGL
      --device ${CMAKE_CURRENT_SOURCE_DIR}/visgl_device.json
      --namespace visgl
      --output ${CMAKE_CURRENT_SOURCE_DIR}/generated
    WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
    DEPENDS visgl_device.json
  )

  add_custom_target(generate_VisGL_debug_objects
    COMMAND ${Python3_EXECUTABLE} ${ANARI_CODE_GEN_ROOT}/generate_debug_objects.py
      --json ${ANARI_CODE_GEN_ROOT}
      --json ${CMAKE_CURRENT_SOURCE_DIR}
      --device ${CMAKE_CURRENT_SOURCE_DIR}/visgl_device.json
      --prefix VisGL
      --namespace visgl
      --output ${CMAKE_CURRENT_SOURCE_DIR}/generated
    WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
    DEPENDS visgl_device.json
  )

  anari_generate_frontend(
    TARGET generate_visgl_frontend
    DEFINITIONS ${CMAKE_CURRENT_SOURCE_DIR}/visgl_device.json
    NAME VisGL
    PREFIX VisGL
    NAMESPACE visgl
    DESTINATION ${CMAKE_CURRENT_SOURCE_DIR}
    CODE_HEADER_FILE ${CMAKE_CURRENT_LIST_DIR}/license.txt
    JSON ${CMAKE_CURRENT_SOURCE_DIR}
  )
endif()

set(CMAKE_INSTALL_RPATH "$ORIGIN")

add_library(${PROJECT_NAME} SHARED
  src/VisGLDevice.cpp
  src/VisGLArrayObjects.cpp
  src/VisGLInstanceObject.cpp
  src/VisGLGroupObject.cpp
  src/VisGLWorldObject.cpp
  src/VisGLSurfaceObject.cpp
  src/VisGLFrameObject.cpp
  src/VisGLDeviceObject.cpp
  src/VisGLGeometryTriangleObject.cpp
  src/VisGLGeometrySphereObject.cpp
  src/VisGLGeometryCylinderObject.cpp
  src/VisGLMaterialMatteObject.cpp
  src/VisGLMaterialTransparentMatteObject.cpp
  src/VisGLMaterialPbrObject.cpp
  src/VisGLCameraPerspectiveObject.cpp
  src/VisGLCameraOrthographicObject.cpp
  src/VisGLLightDirectionalObject.cpp
  src/VisGLLightPointObject.cpp
  src/VisGLSamplerImage1DObject.cpp
  src/VisGLSamplerImage2DObject.cpp
  src/VisGLSamplerImage3DObject.cpp
  src/VisGLSamplerPrimitiveObject.cpp
  src/VisGLSamplerTransformObject.cpp
  src/VisGLSpatial_FieldStructuredRegularObject.cpp
  src/VisGLVolumeScivisObject.cpp
  src/VisGLRendererDefaultObject.cpp
  src/sphere_sample_directions.cpp
  generated/VisGLObjects.cpp
  generated/VisGLDeviceFactories.cpp
  generated/VisGLString.cpp
  generated/VisGLQueries.cpp
  generated/VisGLDebugFactory.cpp
  src/glad/src/gl.c
)

target_include_directories(${PROJECT_NAME}
PUBLIC
  $<BUILD_INTERFACE:${CMAKE_CURRENT_LIST_DIR}>
  generated
  src
  src/glad/include
  src/egl/
  src/glx/
)

target_link_libraries(${PROJECT_NAME}
PUBLIC
  anari::anari
  anari::anari_library_debug
  OpenGL::OpenGL
  Threads::Threads
)

if(OpenGL_EGL_FOUND)
  target_sources(${PROJECT_NAME} PRIVATE
    src/egl/egl_context.cpp
  )
  target_link_libraries(${PROJECT_NAME}
  PUBLIC
    OpenGL::EGL
  )
  target_compile_definitions(${PROJECT_NAME}
  PUBLIC
    VISGL_USE_EGL
  )
endif()

if(OpenGL_GLX_FOUND AND X11_FOUND)
  target_sources(${PROJECT_NAME} PRIVATE
    src/glx/glx_context.cpp
  )
  target_link_libraries(${PROJECT_NAME}
  PUBLIC
    OpenGL::GLX
    X11::X11
    X11::Xutil
  )
  target_include_directories(${PROJECT_NAME}
  PUBLIC
    X11_INCLUDE_DIR
  )

  target_compile_definitions(${PROJECT_NAME}
  PUBLIC
    VISGL_USE_GLX
  )
endif()

target_compile_definitions(${PROJECT_NAME}
PRIVATE
  "anari_library_visgl_EXPORTS"
)

install(TARGETS ${PROJECT_NAME}
  LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
  RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
  ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
)
