// Copyright (c) 2019-2023 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
// 1. Redistributions of source code must retain the above copyright notice,
// this list of conditions and the following disclaimer.
//
// 2. Redistributions in binary form must reproduce the above copyright notice,
// this list of conditions and the following disclaimer in the documentation
// and/or other materials provided with the distribution.
//
// 3. Neither the name of the copyright holder nor the names of its
// contributors may be used to endorse or promote products derived from
// this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGE.
// This file was generated by generate_device_frontend.py
// Don't make changes to this directly

#include "VisGLString.h"
#include <cstdint>
namespace visgl{
int parameter_string_hash(const char *str) {
   static const uint32_t table[] = {0x44430036u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x717001d2u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x7574023au,0x706c024au,0x706c0255u,0x66650267u,0x7978026du,0x6a690272u,0x0u,0x0u,0x6f6e02c2u,0x0u,0x0u,0x6a6902cdu,0x6a6102d3u,0x706502eau,0x716202feu,0x73720327u,0x0u,0x66650332u,0x66650338u,0x6665033eu,0x0u,0x0u,0x706f0348u,0x34310037u,0x605f003au,0x60000108u,0x6000016du,0x5352003bu,0x4847003cu,0x4342003du,0x6000003eu,0x80000000u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x6000009eu,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x54530103u,0x80000001u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x545300feu,0x535200ffu,0x48470100u,0x43420101u,0x1000102u,0x80000002u,0x53520104u,0x48470105u,0x43420106u,0x1000107u,0x80000003u,0x80000004u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x54530168u,0x53520169u,0x4847016au,0x4342016bu,0x100016cu,0x80000005u,0x80000006u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x545301cdu,0x535201ceu,0x484701cfu,0x434201d0u,0x10001d1u,0x80000007u,0x666501d3u,0x6f6e01d4u,0x484701d5u,0x4d4c01d6u,0x600001d7u,0x80000008u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x46450237u,0x54530238u,0x1000239u,0x80000009u,0x7574023bu,0x7372023cu,0x6a69023du,0x6362023eu,0x7675023fu,0x75740240u,0x66650241u,0x34300242u,0x1000246u,0x1000247u,0x1000248u,0x1000249u,0x8000000au,0x8000000bu,0x8000000cu,0x8000000du,0x6665024eu,0x0u,0x0u,0x75740252u,0x6f6e024fu,0x65640250u,0x1000251u,0x8000000eu,0x69680253u,0x1000254u,0x8000000fu,0x62610259u,0x0u,0x0u,0x6d6c0263u,0x6e6d025au,0x7170025bu,0x5554025cu,0x706f025du,0x4645025eu,0x6564025fu,0x68670260u,0x66650261u,0x1000262u,0x80000010u,0x706f0264u,0x73720265u,0x1000266u,0x80000011u,0x77760268u,0x6a690269u,0x6463026au,0x6665026bu,0x100026cu,0x80000012u,0x6261026eu,0x6463026fu,0x75740270u,0x1000271u,0x80000013u,0x73720273u,0x74730274u,0x75740275u,0x47000276u,0x80000014u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x737202bdu,0x626102beu,0x6e6d02bfu,0x666502c0u,0x10002c1u,0x80000015u,0x646302c3u,0x737202c4u,0x666502c5u,0x6e6d02c6u,0x666502c7u,0x6f6e02c8u,0x757402c9u,0x626102cau,0x6d6c02cbu,0x10002ccu,0x80000016u,0x6f6e02ceu,0x666502cfu,0x626102d0u,0x737202d1u,0x10002d2u,0x80000017u,0x747302dcu,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x737202dfu,0x6c6b02ddu,0x10002deu,0x80000018u,0x737202e0u,0x706f02e1u,0x737202e2u,0x535202e3u,0x666502e4u,0x717002e5u,0x666502e6u,0x626102e7u,0x757402e8u,0x10002e9u,0x80000019u,0x626102f5u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x6f6e02fbu,0x737202f6u,0x666502f7u,0x747302f8u,0x757402f9u,0x10002fau,0x8000001au,0x666502fcu,0x10002fdu,0x8000001bu,0x6b6a030du,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x62610322u,0x6665030eu,0x6463030fu,0x75740310u,0x514e0311u,0x706f0314u,0x0u,0x706f031au,0x73720315u,0x6e6d0316u,0x62610317u,0x6d6c0318u,0x1000319u,0x8000001cu,0x7473031bu,0x6a69031cu,0x7574031du,0x6a69031eu,0x706f031fu,0x6f6e0320u,0x1000321u,0x8000001du,0x72710323u,0x76750324u,0x66650325u,0x1000326u,0x8000001eu,0x6a690328u,0x6e6d0329u,0x6a69032au,0x7574032bu,0x6a69032cu,0x7776032du,0x6665032eu,0x4a49032fu,0x65640330u,0x1000331u,0x8000001fu,0x71700333u,0x66650334u,0x62610335u,0x75740336u,0x1000337u,0x80000020u,0x64630339u,0x706f033au,0x6f6e033bu,0x6564033cu,0x100033du,0x80000021u,0x7473033fu,0x74730340u,0x66650341u,0x6d6c0342u,0x6d6c0343u,0x62610344u,0x75740345u,0x66650346u,0x1000347u,0x80000022u,0x73720349u,0x6d6c034au,0x6564034bu,0x514e034cu,0x706f034fu,0x0u,0x706f0355u,0x73720350u,0x6e6d0351u,0x62610352u,0x6d6c0353u,0x1000354u,0x80000023u,0x74730356u,0x6a690357u,0x75740358u,0x6a690359u,0x706f035au,0x6f6e035bu,0x100035cu,0x80000024u};
   uint32_t cur = 0x78420000u;
   for(int i = 0;cur!=0;++i) {
      uint32_t idx = cur&0xFFFFu;
      uint32_t low = (cur>>16u)&0xFFu;
      uint32_t high = (cur>>24u)&0xFFu;
      uint32_t c = (uint32_t)str[i];
      if(c>=low && c<high) {
         cur = table[idx+c-low];
      } else {
         break;
      }
      if(cur&0x80000000u) {
         return cur&0xFFFFu;
      }
      if(str[i]==0) {
         break;
      }
   }
   return -1;
}
const char *param_strings[] = {
   "BC1_RGB",
   "BC1_RGBA",
   "BC1_RGBA_SRGB",
   "BC1_RGB_SRGB",
   "BC2",
   "BC2_SRGB",
   "BC3",
   "BC3_SRGB",
   "OpenGL",
   "OpenGL_ES",
   "attribute0",
   "attribute1",
   "attribute2",
   "attribute3",
   "blend",
   "both",
   "clampToEdge",
   "color",
   "device",
   "exact",
   "first",
   "firstFrame",
   "incremental",
   "linear",
   "mask",
   "mirrorRepeat",
   "nearest",
   "none",
   "objectNormal",
   "objectPosition",
   "opaque",
   "primitiveId",
   "repeat",
   "second",
   "tessellate",
   "worldNormal",
   "worldPosition"
};
} //namespace visgl
