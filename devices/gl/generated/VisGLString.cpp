// Copyright (c) 2019-2023 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
// 1. Redistributions of source code must retain the above copyright notice,
// this list of conditions and the following disclaimer.
//
// 2. Redistributions in binary form must reproduce the above copyright notice,
// this list of conditions and the following disclaimer in the documentation
// and/or other materials provided with the distribution.
//
// 3. Neither the name of the copyright holder nor the names of its
// contributors may be used to endorse or promote products derived from
// this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGE.
// This file was generated by generate_device_frontend.py
// Don't make changes to this directly

#include "VisGLString.h"
#include <cstdint>
namespace visgl{
int parameter_string_hash(const char *str) {
   static const uint32_t table[] = {0x71700029u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x75740091u,0x706c00a1u,0x706c00acu,0x666500beu,0x797100c4u,0x6a6900deu,0x0u,0x0u,0x6f6e012eu,0x0u,0x0u,0x6a650139u,0x6a610146u,0x7065015du,0x71620171u,0x7372019au,0x0u,0x6a6501a5u,0x6a6501b3u,0x706501c6u,0x0u,0x0u,0x706f01e2u,0x6665002au,0x6f6e002bu,0x4847002cu,0x4d4c002du,0x6000002eu,0x80000000u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x4645008eu,0x5453008fu,0x1000090u,0x80000001u,0x75740092u,0x73720093u,0x6a690094u,0x63620095u,0x76750096u,0x75740097u,0x66650098u,0x34300099u,0x100009du,0x100009eu,0x100009fu,0x10000a0u,0x80000002u,0x80000003u,0x80000004u,0x80000005u,0x666500a5u,0x0u,0x0u,0x757400a9u,0x6f6e00a6u,0x656400a7u,0x10000a8u,0x80000006u,0x696800aau,0x10000abu,0x80000007u,0x626100b0u,0x0u,0x0u,0x6d6c00bau,0x6e6d00b1u,0x717000b2u,0x555400b3u,0x706f00b4u,0x464500b5u,0x656400b6u,0x686700b7u,0x666500b8u,0x10000b9u,0x80000008u,0x706f00bbu,0x737200bcu,0x10000bdu,0x80000009u,0x777600bfu,0x6a6900c0u,0x646300c1u,0x666500c2u,0x10000c3u,0x8000000au,0x767500ccu,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x626100dau,0x6a6900cdu,0x737200ceu,0x666500cfu,0x646300d0u,0x757400d1u,0x626100d2u,0x6f6e00d3u,0x686700d4u,0x767500d5u,0x6d6c00d6u,0x626100d7u,0x737200d8u,0x10000d9u,0x8000000bu,0x646300dbu,0x757400dcu,0x10000ddu,0x8000000cu,0x737200dfu,0x747300e0u,0x757400e1u,0x470000e2u,0x8000000du,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x73720129u,0x6261012au,0x6e6d012bu,0x6665012cu,0x100012du,0x8000000eu,0x6463012fu,0x73720130u,0x66650131u,0x6e6d0132u,0x66650133u,0x6f6e0134u,0x75740135u,0x62610136u,0x6d6c0137u,0x1000138u,0x8000000fu,0x6766013eu,0x0u,0x0u,0x0u,0x6f6e0141u,0x7574013fu,0x1000140u,0x80000010u,0x66650142u,0x62610143u,0x73720144u,0x1000145u,0x80000011u,0x7473014fu,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x73720152u,0x6c6b0150u,0x1000151u,0x80000012u,0x73720153u,0x706f0154u,0x73720155u,0x53520156u,0x66650157u,0x71700158u,0x66650159u,0x6261015au,0x7574015bu,0x100015cu,0x80000013u,0x62610168u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x6f6e016eu,0x73720169u,0x6665016au,0x7473016bu,0x7574016cu,0x100016du,0x80000014u,0x6665016fu,0x1000170u,0x80000015u,0x6b6a0180u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x62610195u,0x66650181u,0x64630182u,0x75740183u,0x514e0184u,0x706f0187u,0x0u,0x706f018du,0x73720188u,0x6e6d0189u,0x6261018au,0x6d6c018bu,0x100018cu,0x80000016u,0x7473018eu,0x6a69018fu,0x75740190u,0x6a690191u,0x706f0192u,0x6f6e0193u,0x1000194u,0x80000017u,0x72710196u,0x76750197u,0x66650198u,0x1000199u,0x80000018u,0x6a69019bu,0x6e6d019cu,0x6a69019du,0x7574019eu,0x6a69019fu,0x777601a0u,0x666501a1u,0x4a4901a2u,0x656401a3u,0x10001a4u,0x80000019u,0x717001aau,0x0u,0x0u,0x0u,0x686701afu,0x666501abu,0x626101acu,0x757401adu,0x10001aeu,0x8000001au,0x696801b0u,0x757401b1u,0x10001b2u,0x8000001bu,0x646301b8u,0x0u,0x0u,0x0u,0x656401bdu,0x706f01b9u,0x6f6e01bau,0x656401bbu,0x10001bcu,0x8000001cu,0x666501beu,0x434201bfu,0x7a7901c0u,0x545301c1u,0x6a6901c2u,0x656401c3u,0x666501c4u,0x10001c5u,0x8000001du,0x747301d1u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x0u,0x717001dau,0x747301d2u,0x666501d3u,0x6d6c01d4u,0x6d6c01d5u,0x626101d6u,0x757401d7u,0x666501d8u,0x10001d9u,0x8000001eu,0x434201dbu,0x706f01dcu,0x757401ddu,0x757401deu,0x706f01dfu,0x6e6d01e0u,0x10001e1u,0x8000001fu,0x737201e3u,0x6d6c01e4u,0x656401e5u,0x514e01e6u,0x706f01e9u,0x0u,0x706f01efu,0x737201eau,0x6e6d01ebu,0x626101ecu,0x6d6c01edu,0x10001eeu,0x80000020u,0x747301f0u,0x6a6901f1u,0x757401f2u,0x6a6901f3u,0x706f01f4u,0x6f6e01f5u,0x10001f6u,0x80000021u};
   uint32_t cur = 0x784f0000u;
   for(int i = 0;cur!=0;++i) {
      uint32_t idx = cur&0xFFFFu;
      uint32_t low = (cur>>16u)&0xFFu;
      uint32_t high = (cur>>24u)&0xFFu;
      uint32_t c = (uint32_t)str[i];
      if(c>=low && c<high) {
         cur = table[idx+c-low];
      } else {
         break;
      }
      if(cur&0x80000000u) {
         return cur&0xFFFFu;
      }
      if(str[i]==0) {
         break;
      }
   }
   return -1;
}
const char *param_strings[] = {
   "OpenGL",
   "OpenGL_ES",
   "attribute0",
   "attribute1",
   "attribute2",
   "attribute3",
   "blend",
   "both",
   "clampToEdge",
   "color",
   "device",
   "equirectangular",
   "exact",
   "first",
   "firstFrame",
   "incremental",
   "left",
   "linear",
   "mask",
   "mirrorRepeat",
   "nearest",
   "none",
   "objectNormal",
   "objectPosition",
   "opaque",
   "primitiveId",
   "repeat",
   "right",
   "second",
   "sideBySide",
   "tessellate",
   "topBottom",
   "worldNormal",
   "worldPosition"
};
} //namespace visgl
